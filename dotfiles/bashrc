#run ROOT script to setup environment variables
. /home/alex/root/bin/thisroot.sh
# .bashrc asdf

# If not running interactively, don't do anything
[ -z "$PS1" ] && return

# Source global definitions
if [ -f /etc/bashrc ]; then
    . /etc/bashrc
fi

if [ "$TERM" != "dumb" ]; then
    dircolors -b 1>/dev/null 2>/dev/null
    if (( $? == 0 )); then
        alias ls='ls --color=auto'
    else
        alias ls='ls -G'
    fi
fi



# set window title to user@host:pwd
echo -ne "\033]0;${USER}@`hostname`:`pwd`\007"

# Example: [23:35:56] [amin.nj@elara] ~/syncfiles/dotfiles > 

#TODO reinstate below line when puttycyg works
PS="\[\033[01;34m\][\t]\[\e[0m\] \[\033[00;36m\][\u@\h]\[\e[0m\] \w"
#PS="\[\033[01;34m\][\t]\[\e[0m\] \[\033[00;33m\][\u@\h]\[\e[0m\] \w"

if [ -n "$WINDOW" ]; then
    PS+=" \[\033[01;34m\][${WINDOW}]\[\e[0m\]"
fi
PS+=" \[\033[00;32m\]> "
PS+="\[\e[0m\]"
export PS1=$PS

# if [ "$TERM" == "xterm-color" ]; then
#     export PS1="\[\033[01;34m\][\t]\[\e[0m\] \[\033[01;35m\][\u@\h]\[\e[0m\] \w \[\033[01;32m\]> \[\e[0m\]"
# fi

export EDITOR=vim
#export DISPLAY=:0.0 #screws up X11 forwarding on cobalt
#export PYTHONSTARTUP=~/.pythonrc.py

alias tmux='tmux -2' # fixes colors in vim

export LS_COLORS='no=00:fi=00:di=01;34:ln=01;36:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:su=37;41:sg=30;43:tw=30;42:ow=34;42:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arj=01;31:*.taz=01;31:*.lzh=01;31:*.zip=01;31:*.z=01;31:*.Z=01;31:*.gz=01;31:*.bz2=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.jpg=01;35:*.jpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.avi=01;35:*.fli=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.flac=01;35:*.mp3=01;35:*.mpc=01;35:*.ogg=01;35:*.wav=01;35:';

alias l='ls -l'
alias ll='ls -l'
alias lk='ls -lthr'
#alias hadoop='cd /hadoop/cms/store/user/aschneid/ && ls -l'
alias grep='grep --color=auto'
alias ..='cd ..'
alias ,,='echo "$PWD -> $OLDPWD" && cd $OLDPWD'
alias cd..='cd ..'
alias bc='bc -l'
alias root='root -l'
alias vrc='vim ~/.vimrc'
#alias git='unset SSH_ASKPASS; git'
alias vom='vim' #nobody knows what vom is...
alias pub='ssh -X dloving@pub.icecube.wisc.edu'
alias gg='git log --oneline --abbrev-commit --all --graph --decorate --color'

#ssh


alias tree='tree -C'
alias stats='~/syncfiles/pyfiles/stats.py'
alias histo='~/syncfiles/pyfiles/histo.py'

export HISTFILESIZE=500000
export HISTSIZE=100000
export PYTHONPATH="${PYTHONPATH}:$HOME/syncfiles/pyfiles"

# if [ "$(uname -o 2>/dev/null)" = "Cygwin" ]; then
alias desktop='cd /cygdrive/c/Users/Austin/Desktop'
function say() { mplayer -really-quiet "http://translate.google.com/translate_tts?tl=en&q=$*"; }
#fi

function xterms {
export DISPLAY=:0.0
xrdb -merge ~/.Xresources
}

function screens {
COUNTER=0
for i in `screen -ls | egrep -n ".*Detached.*" | awk '{print $2}' | cut -f1 -d '.'`; do
    (( COUNTER++ ))
    echo $COUNTER "=>" $i
    #echo $1

    if [ $# -gt 0 ]; then
        #echo $#
        if [ "$1" -eq "$COUNTER" ]; then
            #echo this screen
            screen -r $i
        fi

    fi

done
}

function pdftopng {
convert -verbose -density 250 -trim $1 -quality 100 -sharpen 0x1.0 ${1%%.pdf}.png
}

function alarm {
if [ $# -lt 2 ]; then
    echo "usage: alarm <seconds> <msg>"
    return 1
fi
local wait=$1
shift
(sleep $wait 2>/dev/null && echo -e "\n!!\n$*\n!!\n" && echo -e "\a" &)

}

function col {
if [ $# -lt 1 ]; then
    echo "usage: col <col #>"
    return 1
fi
awk -v x=$1 '{print $x}'

}

function extract {
if [ -f $1 ] ; then
    case $1 in
        *.tar.bz2)   tar xvjf $1    ;;
        *.tar.gz)    tar xvzf $1    ;;
        *.bz2)       bunzip2 $1     ;;
        *.rar)       unrar x $1     ;;
        *.gz)        gunzip $1      ;;
        *.tar)       tar xvf $1     ;;
        *.tbz2)      tar xvjf $1    ;;
        *.tgz)       tar xvzf $1    ;;
        *.zip)       unzip $1       ;;
        *.Z)         uncompress $1  ;;
        *.7z)        7z x $1        ;;
        *)           echo "don't know how to extract '$1'..." ;;
        esac
else
   echo "'$1' is not a valid file!"
fi
}

